buildscript {
  ext {
    springBootVersion = '1.2.3.RELEASE'
  }

  repositories {
    jcenter()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    classpath("org.springframework:springloaded:$springBootVersion")
    classpath 'com.h2database:h2:1.3.170'
    classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
  }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'

group = 'sample'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources

def aptGeneratePath = 'build/apt_generated'
compileJava.options.compilerArgs = ['-s', aptGeneratePath]
new File(aptGeneratePath).mkdirs()

repositories {
  jcenter()
  maven { url "http://repo.spring.io/release" }
  maven { url "http://repo.spring.io/snapshot" }
  maven { url "http://repo.spring.io/milestone" }
  // domaのMavenリポジトリを指定する
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

idea {
  module {
    inheritOutputDirs = false
    outputDir = file("$buildDir/classes/main/")
  }
}

dependencies {

  // for Spring Boot
  compile("org.springframework.boot:spring-boot-starter-web"){
    exclude module: "spring-boot-starter-tomcat"
  }

  compile("org.springframework.boot:spring-boot-starter-jetty")
/*
  compile ("org.springframework.boot:spring-boot-starter-jersey:$springBootVersion") {
    exclude(module: 'spring-webmvc')
  }
*/
  // for Spring Actuator
  compile("org.springframework.boot:spring-boot-starter-actuator")
  // for Thymeleaf
  compile("org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE")

  // for Common Libraries
  compile("org.slf4j:slf4j-api:1.7.10")
  compile("org.slf4j:jcl-over-slf4j:1.7.10")
  compile("ch.qos.logback:logback-classic:1.1.2")
  compile("ch.qos.logback:logback-core:1.1.2")
  compile("org.lazyluke:log4jdbc-remix:0.2.7")

  // for JDBC
  /* H2database */
  compile("com.h2database:h2")
  // SpringJDBC
  compile("org.springframework.boot:spring-boot-starter-jdbc")
  // Doma2.x(Java1.8)
  compile("org.seasar.doma:doma:2.2.1-SNAPSHOT")

  //LOMBOK
  compile("org.projectlombok:lombok:1.16.2")

  //Commons
  compile('org.apache.commons:commons-lang3:3.1')

  //test
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile("org.springframework.boot:spring-boot-starter-test")

}

jar {
  baseName = 'spring-boot-crud'
  version = '0.0.1-SNAPSHOT'
}

flyway {
  url = 'jdbc:h2:file:~/target/mydb'
  user = 'sa'
}